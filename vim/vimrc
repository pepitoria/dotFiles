"" set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'skammer/vim-css-color'
"" Plugin 'autoclose'
Plugin 'jiangmiao/auto-pairs'
Plugin 'genutils'
"" Plugin 'closetag'
Plugin 'tpope/vim-commentary'
Plugin 'ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-unimpaired'
"" Plugin 'idleFingers'
Plugin 'markdown'
"" Plugin 'matchit'
Plugin 'scrooloose/nerdcommenter'
"" Plugin 'notes'
Plugin 'tpope/vim-rails'
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-ragtag'
Plugin 'syntastic'
Plugin 'tabular'
Plugin 'maksimr/vim-jsbeautify'
Plugin 'vim-less'
Plugin 'vim-multiple-cursors'
Plugin 'shougo/vimproc'
Plugin 'shougo/vimshell'

Plugin 'ervandew/supertab'

"" Plugin 'Valloric/YouCompleteMe'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'Lokaltog/vim-powerline'
Plugin 'majutsushi/tagbar'
Plugin 'xolox/vim-misc'
"" Plugin 'xolox/vim-easytags'
Plugin 'fholgado/minibufexpl.vim'
Plugin 'int3/vim-taglist-plus'
Plugin 'scrooloose/nerdtree'
Plugin 'kylef/apiblueprint.vim'
Plugin 'ntpeters/vim-better-whitespace'

call vundle#end()
"" Browser

let netrw_altv = 1
let netrw_alto = 1

"" Filetypes specific conf
augroup inc
  autocmd BufRead,BufNewFile *.inc set filetype=php
  autocmd BufRead,BufNewFile *.ejs set filetype=html
  autocmd BufRead,BufNewFile *.schema set filetype=javascript
  autocmd BufRead,BufNewFile *.conf set syntax=nginx
augroup END

"" Get rid of all the trimming and trailing spaces
autocmd FileType * autocmd BufWritePre <buffer> StripWhitespace

"" General
"" set nocompatible
syntax enable
set encoding=utf-8
set nu " numeros de linea
set showcmd " muestra comandos incompletos
set ruler " muestra la posicion del cursor
set scrolloff=5 " dejar siempre espacio alrededor del cursor
let mapleader="," " cambiar <leader> de \ a ,
filetype plugin indent on

"" Whitespace
set nowrap
set tabstop=4
set shiftwidth=4
set expandtab                  " usar espacios en lugar de tabs
set backspace=indent,eol,start " backspace a traves de cualquier cosa

"" Search
set hlsearch " resaltar resultados de busqueda
set incsearch " busqueda incremental
set ignorecase " busqueda independiente de may/min...
set smartcase " excepto si el termino tiene al menos una mayuscula

"" Themes
set t_Co=256
colorscheme beny
set guifont=Monaco:h10
"" colorscheme solarized
"" colorscheme distinguished
"" colorscheme monokai

"" log & undo
set history=1000
set undolevels=1000
set wildignore=*.swp,*.bak,*.pyc,*.class,*.lock
set title
set visualbell
set noerrorbells

"" Backup
set nobackup
set noswapfile
set backupdir=~/.vim/_backup
set directory=~/.vim/_temp

""treeat numbers as decimals even if they are preceeded by 0
set nrformats=
"" Disabling Angular html checker for syntastic
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute " ,"trimming empty \<", "inserting implicit ", "unescaped \&" , "lacks \"action", "lacks value", "lacks \"src", "is not recognized!", "discarding unexpected", "replacing obsolete "]

"" CtrlP Config
let g:ctrlp_working_path_mode = 'r'
let g:ctrlp_match_window_bottom = '0'
let g:ctrlp_custom_ignore = '\v[\/](\.git|vendor|node_modules|build|coverage|logs|tmp|dist|docs|ANEXO|asset-manager|bower_components|demo|lib|locale|documentation)$'

"" NERDTree
let g:NERDTreeWinPos = "left"
let g:NERDTreeWinSize = 30
map <D-e> :NERDTreeToggle<CR>
map <c-e> :NERDTreeToggle<CR>
nmap <silent> <leader>ff :NERDTreeFind<CR>
set splitright

"" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

nmap <silent> <leader>ngsn :e ~/.vim/bundle/vim-snippets/snippets/javascript/javascript.angular.snippets<CR>
nmap <silent> <leader>htmlsn :e ~/.vim/bundle/vim-snippets/snippets/html.snippets<CR>

""minibuffer
nmap <silent> <leader>mbt :MBEToggle<CR> :MBEFocus<CR>
nmap <silent> <leader><leader> :MBEFocus<CR>
nmap <silent> <leader>mbb :MBEbb<CR>
nmap <silent> <leader>mbn :MBEbf<CR>

"" Surround
nmap <silent> <leader>s ysiw

"" Explorer
"" map <D-e> :Explore<CR>

"" Fugitive
nmap <silent> <leader>gs :Gstatus<CR>
nmap <silent> <leader>gd :Gdiff<CR>

"" beautify
map <c-f> :call JsBeautify()<cr>

autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>

""autocmd FileType javascript autocmd BufWritePre <buffer> :call JsBeautify()<CR>

if bufwinnr(1)
  map <c-j> 5<C-W>-
  map <c-k> 5<C-W>+
  map <c-l> 5<C-W>>
  map <c-h> 5<C-W><
endif

let g:UltiSnipsExpandTrigger="<D-j>"
let g:UltiSnipsJumpForwardTrigger="<D-j>"
let g:UltiSnipsJumpBackwardTrigger="<D-k>"

"" let g:tagbar_ctags_bin='/usr/local/bin/ctags'
"" noremap <silent> <leader>y :TagbarToggle <CR>

set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
set shell=/bin/bash\ --rcfile\ /Users/jbeneytez/.bashrc
